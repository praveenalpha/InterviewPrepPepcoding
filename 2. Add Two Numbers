/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
   
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == nullptr)   return l2;
        if(l2 == nullptr)   return l1;
        int c=0;
        ListNode* new_head = new ListNode(-1);
        
        ListNode* head = new_head;
        
        while(l1 != nullptr || l2 != nullptr || c != 0){
            
            int a=0,b=0;
            if(l1 != nullptr){  a = l1->val;  l1 = l1->next;}
            if(l2!=nullptr){    b = l2->val;   l2 = l2->next;}
            int sum = a+b+c;
            head->next = new ListNode(sum%10);
            head = head->next;
            c = sum/10;
        }
        return new_head->next;
    }
};
