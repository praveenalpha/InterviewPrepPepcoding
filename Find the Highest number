// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution {
public:
    int findPeakElement(vector<int>& arr) 
    {
        int n = arr.size();
        int l = 0, r = n-1;
        while(l <= r){
            int mid = l+(r-l)/2;
            if(mid > 0 && mid < n-1){
                if(arr[mid] > arr[mid+1] && arr[mid] > arr[mid-1])    return arr[mid];
                if(arr[mid] > arr[mid-1])   l = mid+1;
                else    r = mid-1;
            }
            else if(mid == 0)   return arr[0] > arr[1] ? arr[0] : arr[1];
            else    return arr[n-1] > arr[n-2] ? arr[n-1] : arr[n-2];
        }
        return arr[0];
    }
};



// { Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n;
    	cin >> n;
    	vector<int>a(n);
    	for(int i = 0; i < n; i++)
    		cin>>a[i];
    	Solution ob;
    	int ans = ob.findPeakElement(a);
    	cout << ans << "\n";
    }
	return 0;
}

  // } Driver Code Ends
