/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<TreeNode*,int> solve(TreeNode* root){
        if(root == nullptr)
            return {nullptr,0};
        pair<TreeNode*,int> l = solve(root->left);
        pair<TreeNode*,int> r = solve(root->right);
        if(l.second > r.second)
            return {l.first,l.second+1};
        if(r.second > l.second)
            return {r.first,r.second+1};
        return {root,r.second+1};
        
    }
    TreeNode* lcaDeepestLeaves(TreeNode* root) {
        return solve(root).first;
    }
};
