// { Driver Code Starts
//Initial template for C++
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function template in C++

class Solution
{
    public:
    //Function to find total number of unique paths.
    int solve(int a, int b, int i, int j, vector<vector<int>>& dp){
        if(i >= a || j >= b)    return 0;
        if(a-1 == i && b-1 == j)    return dp[i][j] = 1;
        if(dp[i][j] != -1)  return dp[i][j];
        int ans = 0;
        ans += solve(a, b, i+1, j, dp);
        ans += solve(a, b, i, j+1, dp);
        return dp[i][j] = ans;
    }
    int NumberOfPath(int a, int b)
    {
        vector<vector<int>> dp(a, vector<int> (b, -1));
        int ans = 0;
        return solve(a, b, 0, 0, dp);
    }
};


// { Driver Code Starts.
int main()
{
    //taking total testcases
    int t;
    cin>>t;
    while(t--)
    {
        //taking dimensions of the matrix
        int a,b;
        cin>>a>>b;
        Solution ob;
        //calling NumberOfPath() function
        cout << ob.NumberOfPath(a,b) << endl;
    }
}

  // } Driver Code Ends
