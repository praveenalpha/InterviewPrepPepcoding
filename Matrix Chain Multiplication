// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int matrixMultiplication(int N, int arr[])
    {
        vector<vector<int>> dp(N-1, vector<int> (N-1));
        
        for(int gap=0;gap<N-1;gap++){
            for(int i=0,j=gap;j<N-1;i++,j++){
                if(gap == 0){
                    dp[i][j] = 0;
                }
                else if(gap == 1){
                    dp[i][j] = arr[i]*arr[j]*arr[j+1];
                }
                else{
                    int ans = INT_MAX;
                    for(int k=i;k<j;k++){
                        int left = dp[i][k];
                        int right = dp[k+1][j];
                        int val = arr[i]*arr[k+1]*arr[j+1];
                        ans = min(ans, left + val + right);
                    }
                    dp[i][j] = ans;
                }
            }
        }
        // for(int i=0;i<N-1;i++){
        //     for(int j=0;j<N-1;j++){
        //         cout<<dp[i][j]<<" ";
        //     }
        //     cout<<endl;
        // }
        return dp[0][N-2];
    }
    
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        cout<<ob.matrixMultiplication(N, arr)<<endl;
    }
    return 0;
}  // } Driver Code Ends
