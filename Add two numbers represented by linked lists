// { Driver Code Starts
// driver

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
using namespace std;

/* Linked list Node */
struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

struct Node* buildList(int size)
{
    int val;
    cin>> val;
    
    Node* head = new Node(val);
    Node* tail = head;
    
    for(int i=0; i<size-1; i++)
    {
        cin>> val;
        tail->next = new Node(val);
        tail = tail->next;
    }
    
    return head;
}

void printList(Node* n)
{
    while(n)
    {
        cout<< n->data << " ";
        n = n->next;
    }
    cout<< endl;
}


 // } Driver Code Ends
/* node for linked list:

struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    public:
    //Function to add two numbers represented by linked list.
    struct Node* reverse(struct Node* ll){
        struct Node* prev = nullptr;
        struct Node* curr = ll;
        struct Node* frwd = nullptr;
        while(curr != nullptr){
            frwd = curr->next;
            curr->next = prev;
            prev = curr;
            curr = frwd;
        }
        return prev;
    }
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {
        struct Node* f = reverse(first);
        struct Node* s = reverse(second);
        
        int sum = 0, rem = 0;
        struct Node* ans = nullptr;
        while(f != nullptr && s != nullptr) {
            
            int sum = f->data+s->data + rem;
            struct Node* node = new Node( (sum%10) );
            node->next = ans;
            ans = node;
            rem = sum / 10;
            f = f->next;
            s = s->next;
        }
        
        while(f != nullptr){
            sum = f->data + rem;
            struct Node* node = new Node(sum%10);
            rem = sum/10;
            node->next = ans;
            ans = node;
            f = f->next;
        }
        while(s != nullptr){
            sum = s->data + rem;
            struct Node* node = new Node(sum % 10);
            rem = sum/10;
            node->next = ans;
            ans = node;
            s = s->next;
        }
        if(rem != 0){
            struct Node* node = new Node(rem);
            node->next = ans;
            ans = node;
        }
        return ans;
    }
};


// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, m;
        
        cin>>n;
        Node* first = buildList(n);
        
        cin>>m;
        Node* second = buildList(m);
        Solution ob;
        Node* res = ob.addTwoLists(first,second);
        printList(res);
    }
    return 0;
}
  // } Driver Code Ends
