/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        int left = leftHeight(root);
        int right = rightHeight(root);
        int ans = 0;
        
        if(left == right){
            return (1 << left) - 1;
        }
        
        ans += countNodes(root->left);
        ans += countNodes(root->right);
        return ans + 1;
        
    }
    
    int leftHeight(TreeNode* root){
        if(root == nullptr)
            return 0;
        int count = 1;
        while(root->left != nullptr){
            root = root->left;
            count++;
        }
        return count;
    }
    int rightHeight(TreeNode* root){
        if(root == nullptr)
            return 0;
        int count = 1;
        while(root->right != nullptr){
            root = root->right;
            count++;
        }
        return count;
    }
    
};
