class Solution {
public:
    
    int lah(vector<int>& arr){
        int n = arr.size();
        vector<int> nsol(n, -1);
        vector<int> nsor(n, n);
        stack<int> st;
        
        for(int i=n-1;i>=0;i--){
            while(st.size() != 0 && arr[st.top()] > arr[i]){
                nsol[st.top()] = i;
                st.pop();
            }
            st.push(i);
        }
        
        for(int i=0;i<n;i++){
            while(st.size() != 0 && arr[st.top()] > arr[i]){
                nsor[st.top()] = i;
                st.pop();
            }
            st.push(i);
        }
        
        int ans = 0;
        for(int i=0;i<n;i++){
            int h = arr[i], w = nsor[i] - nsol[i]-1;
            ans = max(ans, (h*w));
        }
        return ans;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.size() == 0)
            return 0;
        int n1 = matrix.size(), n2 = matrix[0].size(), ans = 0;
        vector<int> row(n2);
        
        for(int i=0;i<n1;i++){
            for(int j=0;j<n2;j++){
                if(matrix[i][j] == '0'){
                    row[j] = 0;
                }
                else{
                    row[j] += (matrix[i][j]-'0');
                }
            }
            ans = max(ans, lah(row));
        }
        return ans;
        
    }
};
