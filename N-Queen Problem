// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:

    void solve(int n, vector<bool> &row,vector<bool> &col, vector<bool> &dia1, vector<bool> &dia2, vector<vector<int>> &ans, vector<int> &sans, int i){
        if(n == i){
            ans.push_back(sans);
            return;
        }
        
        for(int j=0;j<n;j++){
            if(row[i] == false && col[j] == false && dia1[i+j] == false && dia2[i-j+n-1] == false){
                row[i] = true;
                col[j] = true;
                dia1[i+j] = true;
                dia2[i-j+n-1] = true;
                sans.push_back(j+1);
                solve(n, row, col, dia1, dia2, ans, sans, i+1);
                sans.pop_back();
                row[i] = false;
                col[j] = false;
                dia1[i+j] = false;
                dia2[i-j+n-1] = false;
            }
        }
    }

    vector<vector<int>> nQueen(int n) {
        vector<bool> row(n);
        vector<bool> col(n);
        vector<bool> dia1(n*2 - 1);
        vector<bool> dia2(n*2 -1);
        vector<vector<int>> ans;
        vector<int> sans;
        solve(n, row, col, dia1, dia2, ans, sans, 0);
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        
        Solution ob;
        vector<vector<int>> ans = ob.nQueen(n);
        if(ans.size() == 0)
            cout<<-1<<"\n";
        else {
            for(int i = 0;i < ans.size();i++){
                cout<<"[";
                for(int u: ans[i])
                    cout<<u<<" ";
                cout<<"] ";
            }
            cout<<endl;
        }
    }
    return 0;
}  // } Driver Code Ends
