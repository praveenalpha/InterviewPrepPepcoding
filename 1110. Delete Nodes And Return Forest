/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(TreeNode* root, vector<int>& a,vector<TreeNode*>& ans){
        if(root == nullptr)
            return nullptr;
        root->left=solve(root->left,a,ans);
        root->right=solve(root->right,a,ans);
        for(int e:a){
            if(root->val == e){
                if(root->left != nullptr)
                    ans.push_back(root->left);
                if(root->right != nullptr)
                    ans.push_back(root->right);
                return nullptr;
            }
        }
        return root;
    }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& a) {
        vector<TreeNode*> ans;
        if(root == nullptr)
            return ans;
        solve(root,a,ans);
        for(int e:a){
            if(root->val == e){
                return ans;
            }
        }
        ans.push_back(root);
        
        return ans;
    }
};
