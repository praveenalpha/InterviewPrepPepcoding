// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
//User function template for C++

class Solution{   
public:
    bool solve(int arr[], int n, int i, int k, vector<vector<int>>& dp){
        if(k == 0){
            dp[i][k] = 1;
            return true;
        }
        if(i == n){
            dp[i][k] = 0;
            return false;
        }
        if(dp[i][k] != -1){
            return dp[i][k] == 1 ? true : false;
        }
        if(k - arr[i] >= 0){
            bool ans = solve(arr, n, i+1, k-arr[i], dp);
            ans == true ? dp[i][k] = 1 : dp[i][k] = 0;
            if(ans == true) return true;
        }
        bool ans = solve(arr, n, i+1, k, dp);
        ans == true ? dp[i][k] = 1 : dp[i][k] = 0;
        return ans;
    }
    bool isSubsetSum(int n, int arr[], int k){
        vector<vector<int>> dp(n+1, vector<int> (k+1, -1));
        return solve(arr, n, 0, k, dp);
    }
};

// { Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N, sum;
        cin >> N;
        int arr[N];
        for(int i = 0; i < N; i++){
            cin >> arr[i];
        }
        cin >> sum;
        
        Solution ob;
        cout << ob.isSubsetSum(N, arr, sum) << endl;
    }
    return 0; 
} 
  // } Driver Code Ends
