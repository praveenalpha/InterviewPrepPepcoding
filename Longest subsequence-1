// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int longestSubsequence(int N, int A[])
    {
        unordered_map<int, int> mp;
        int ans = 0;
        for(int i=0;i<N;i++){
            int ele = A[i];
            if(mp.find(ele - 1) != mp.end() && mp.find(ele + 1) != mp.end()){
                mp[ele] = max(mp[ele - 1], mp[ele + 1]) + 1;
            }
            else if(mp.find(ele - 1) != mp.end()){
                mp[ele] = mp[ele - 1]+1;
            }
            else if(mp.find(ele + 1) != mp.end()){
                mp[ele] = mp[ele + 1]+1;
            }
            else{
                mp[ele] = 1;
            }
            ans = max(ans, mp[ele]);
        }
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int A[N];
        for(int i = 0;i < N;i++)
            cin>>A[i];
        
        Solution ob;
        cout<<ob.longestSubsequence(N, A)<<endl;
    }
    return 0;
}  // } Driver Code Ends
