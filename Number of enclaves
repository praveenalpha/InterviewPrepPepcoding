class Solution {
public:
    void dfs(vector<vector<int>>& arr, int i, int j, int m, int n){
        arr[i][j] = 0;
        if(i+1 < m && arr[i+1][j] == 1)     dfs(arr, i+1, j, m, n);
        if(i-1 >= 0 && arr[i-1][j] == 1)    dfs(arr, i-1, j, m, n);
        if(j+1 < n && arr[i][j+1] == 1)     dfs(arr, i, j+1, m, n);
        if(j-1 >= 0 && arr[i][j-1] == 1)    dfs(arr, i, j-1, m, n);
    }
    int numEnclaves(vector<vector<int>>& arr) {
        int m = arr.size(), n = arr[0].size();
        for(int i=0;i<m;i++){
            if(arr[i][0] == 1)  dfs(arr, i, 0, m, n);
            if(arr[i][n-1] == 1)    dfs(arr, i, n-1, m, n);
        }
        for(int j=0;j<n;j++){
            if(arr[0][j] == 1)  dfs(arr, 0, j, m, n);
            if(arr[m-1][j] == 1) dfs(arr, m-1, j, m, n);
        }
        int ans = 0;
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                if(arr[i][j] == 1)  ans++;
            }
        }
        return ans;
    }
};
