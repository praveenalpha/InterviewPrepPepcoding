// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
// Function to return minimum number of jumps to end of array

class Solution{
  public:
    int solve(int arr[], int n, long long int i, vector<int>& dp){
        if(i >= n-1)  return 0;
        if(dp[i] != -1) return dp[i];
        if(arr[i] == 0) return INT_MAX;
        int ans = INT_MAX;
        for(long long int j=arr[i];j>=1;j--){
            int s_ans = solve(arr, n, i+j, dp);
            ans = min(ans, s_ans);
        }
        return dp[i] = ans == INT_MAX ? INT_MAX : ans + 1;
    }
    int minJumps(int arr[], int n){
        vector<int> dp(n+1, -1);
        int ans = solve(arr, n, 0, dp);
        return ans == INT_MAX ? -1 : ans;
    }
};


// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,i,j;
        cin>>n;
        int arr[n];
        for(int i=0; i<n; i++)
            cin>>arr[i];
        Solution obj;
        cout<<obj.minJumps(arr, n)<<endl;
    }
    return 0;
}
  // } Driver Code Ends
