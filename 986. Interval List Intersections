class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& arr1, vector<vector<int>>& arr2) {
        int n1 = arr1.size(), n2 = arr2.size();
        vector<vector<int>> ans;
        if(n1 == 0 || n2 == 0)
            return ans;
        int i=0,j=0;
        while(i < n1 && j < n2){
            int s1=arr1[i][0], e1=arr1[i][1], s2=arr2[j][0], e2=arr2[j][1];
            if(s1 <= e2 && s2 <= e1){
                ans.push_back({max(s1, s2), min(e1,e2)});
                if(e1< e2){
                    i++;
                }
                else if(e2 < e1){
                        j++;
                }
                else{
                    i++;
                    j++;
                }
            }
            else if(s2 <= e1 && s1 <= e2){
                ans.push_back({max(s1, s2), min(e1,e2)});
                if(e1< e2){
                    i++;
                }
                else if(e2 < e1){
                        j++;
                }
                else{
                    i++;
                    j++;
                }
            }
            else if(s1 < e2 && e1 < s2){
                i++;
            }
            else if(s2 < e1 && e2 < s1){
                j++;
            }
        }
        return ans;
    }
};
