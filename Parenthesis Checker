// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


// Function to return if the paranthesis are balanced or not
bool ispar(string x)
{
    // Your code here
    stack<char> st;
    
    for(int i=0;i<x.length();i++){
        if(x[i] == '(' || x[i] == '[' || x[i] == '{'){
            st.push(x[i]);
            continue;
        }
        // if(st.size() == 0)
        //     return false;
        else if(st.size() != 0 && x[i] == ')' && st.top() == '('){
            st.pop();
        }   
        else if(st.size() != 0 && x[i] == ']' && st.top() == '['){
            st.pop();
        }
        else if(st.size() != 0 && x[i] == '}' && st.top() == '{'){
            st.pop();
        }
        else 
            return false;
    }
    if(st.size() == 0){
        return true;
    }
    return false;
}


// { Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       if(ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}  // } Driver Code Ends
