// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int solve(int arr[], int n, int k, int i, vector<vector<int>>& dp){
        if(k == 0)  return dp[i][k] = 1;
        if(i == n)  return dp[i][k] = 0;
        if(dp[i][k] != -1)  return dp[i][k];
        if(k - arr[i] >= 0){
            int ans = solve(arr, n, k-arr[i], i+1, dp);
            if(ans == 1){
                return dp[i][k] = 1;
            }
        }
        return dp[i][k] = solve(arr, n, k, i+1, dp);
    }
    int equalPartition(int n, int arr[])
    {
        int sum = 0;
        for(int i =0 ;i<n;i++)  sum += arr[i];
        if(sum % 2 == 1)    return 0;
        vector<vector<int>> dp(n+1, vector<int> ((sum/2) + 1, -1));
        return solve(arr, n, sum/2, 0, dp);
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}  // } Driver Code Ends
