/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
struct compare{
    bool operator()(ListNode* a, ListNode* b){
        return a->val > b->val;
    }
};
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*, vector<ListNode*>, compare> pq;
        int k = lists.size();
        for(int i=0;i<k;i++){
            if(lists[i] != nullptr)
                pq.push(lists[i]);
        }
        ListNode* ans = new ListNode(-1);
        ListNode* curr = ans;
        while(pq.empty()==false){
            ListNode* rnode = pq.top();
            pq.pop();
            curr->next = rnode;
            curr = curr->next;
            if(rnode->next != nullptr)
                pq.push(rnode->next);
        }
        return ans->next;
    }
};
