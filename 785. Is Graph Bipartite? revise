class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int V = graph.size();
        vector<int> vis(V, -1);
        for(int i=0;i<V;i++){
            if(vis[i] != -1)    continue;
            int clr = 0;
            vis[i] = 0;
            queue<int> q;
            q.push(i);
            while(q.size() > 0){
                int size = q.size();
                while(size--){
                    int rnode = q.front();
                    q.pop();
                    for(int nbr : graph[rnode]){
                        if(vis[nbr] == clr) return false;
                        if(vis[nbr] == -1){
                            vis[nbr] = clr == 0 ? 1 : 0;
                            q.push(nbr);
                        }
                    }
                }
                clr = clr == 0 ? 1 : 0;
            }
        }
        return true;
    }
};
