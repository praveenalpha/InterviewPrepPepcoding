/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,vector<string>& res,string ans){
        if(root == nullptr)
            return;
        if(root->left == nullptr && root->right == nullptr){
            ans+=to_string(root->val);
            res.push_back(ans);
            return;
        }
        ans+=to_string(root->val);
        ans+="->";
        solve(root->left,res,ans);
        solve(root->right,res,ans);
        ans.pop_back();
        ans.pop_back();
        ans.pop_back();
        
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        if(root == nullptr)
            return res;
        solve(root,res,"");
        return res;
    }
};
