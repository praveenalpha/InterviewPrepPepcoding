// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
	public:
	bool isValid(int ni, int nj, int n){
	    if(ni >= 0 && ni < n && nj >= 0 && nj < n)
	        return true;
	    return false;
	}
	double findProb(int n,int r, int c, int k)
	{
	    vector<vector<double>> curr(n, vector<double> (n));
	    vector<vector<double>> next(n, vector<double> (n));
	    
	    vector<vector<int>> dir = {{-2,1},{-1,2},{1, 2},{2, 1},{2, -1},{1, -2},{-1, -2},{-2, -1}};
	    curr[r][c] = 1.00;
	    for(int m=0;m<k;m++){
	        for(int i=0;i<n;i++){
	            for(int j=0;j<n;j++){
	                if(curr[i][j] != 0.0){
	                    for(int d = 0;d<8;d++){
	                        int ni = i + dir[d][0];
	                        int nj = j + dir[d][1];
	                        if(isValid(ni, nj, n)){
	                            next[ni][nj] += (curr[i][j] / 8.00);
	                        }
	                    }
	                    
	                }
	            }
	        }
	        curr = next;
	        next = vector<vector<double>> (n, vector<double> (n));;
	    }
	    double ans = 0.0;
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            ans += curr[i][j];
	        }
	    }
	    return ans;
	}
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int N, start_x, start_y, steps;
		cin >> N >> start_x >> start_y >> steps;
		Solution ob;
		double ans = ob.findProb(N, start_x, start_y, steps);
		cout << fixed << setprecision(6) << ans <<"\n";
	}  
	return 0;
}  // } Driver Code Ends
