class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> nsor(n, n);
        vector<int> nsol(n, -1);
        stack<int> st;
        
        for(int i=n-1;i>=0;i--){
            while(st.size() != 0 && heights[st.top()] > heights[i]){
                nsol[st.top()] = i;
                st.pop();
            }
            st.push(i);
        }
        
        for(int i=0;i<n;i++){
            while(st.size() != 0 && heights[st.top()] > heights[i]){
                nsor[st.top()] = i;
                st.pop();
            }
            st.push(i);
        }
        
        int ans = 0;
        for(int i=0;i<n;i++){
            int h = heights[i];
            int w = nsor[i] - nsol[i]-1;
            // cout<<nsor[i]<<" "<<nsol[i]<<"-1 = "<<w<<endl;
            ans = max((h*w), ans);
        }
        return ans;
    }
};
