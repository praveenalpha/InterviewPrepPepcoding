class Solution {
public:
    int orangesRotting(vector<vector<int>>& arr) {
        int ans = 0, m=arr.size(), n=arr[0].size(),f=0;
        queue<pair<int, int>> q;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(arr[i][j] == 2)  q.push({i, j});
                if(arr[i][j] == 1)  f++;
            }
        }
        
        while(q.size() > 0){
            int size = q.size();
            while(size--){
                pair<int, int> rnode = q.front();
                q.pop();
                int i=rnode.first, j=rnode.second;
                arr[i][j] = 0;
                if(i+1 < m && arr[i+1][j] == 1){f--;arr[i+1][j]=0; q.push({i+1, j});}
                if(i-1 >= 0 && arr[i-1][j] == 1){f--;arr[i-1][j]=0; q.push({i-1, j});}
                if(j+1 < n && arr[i][j+1] == 1) {f--;arr[i][j+1]=0;q.push({i, j+1});}
                if(j-1 >= 0 && arr[i][j-1] == 1) {f--;arr[i][j-1]=0;q.push({i, j-1});}
            }
            ans++;
        }
        if(f > 0)   return -1;
        return ans==0?0:ans-1;
    }
};
