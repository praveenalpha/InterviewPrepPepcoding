/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root1, TreeNode* root2, bool& ans){
        if(root1 == nullptr && root2 == nullptr)    return;
        if(root1 == nullptr){
            ans = false;
            return;
        }
        if(root2 == nullptr){
            ans = false;
            return;
        }
        solve(root1->left, root2->right, ans);
        if(ans == false)    return;
        solve(root1->right, root2->left, ans);
        if(ans == false)    return;
        
        if(root1 -> val != root2->val)
            ans = false;
    }
    bool isSymmetric(TreeNode* root) {
        if(root->left == nullptr && root->right == nullptr) return true;
        bool ans = true;
        solve(root->left, root->right, ans);
        return ans;
    }
};
