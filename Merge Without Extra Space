// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


//User function template for C++
class Solution{
public:
	void merge(int arr1[], int arr2[], int n, int m) {
	    int gap = ((n + m + 1) >> 1);
	    while(gap > 0){
	        int i= 0, j = gap;
	        while(j  < n + m){
	            int x,y;
	            if(i  < n)
	                x = arr1[i];
	            else
	                x = arr2[i-n];
	            if(j  < n)
	                y = arr1[j];
	            else
	                y = arr2[j-n];
	           
	            if(x > y){
	                if(i < n && j < n)
	                    swap(arr1[i++] , arr1[j++]);
	                else if(i >= n && j >= n){
	                    swap(arr2[i - n], arr2[j - n]);
	                    ++i;
	                    ++j;
	                }
	                else{
	                    swap(arr1[i++] , arr2[j - n]);
	                    ++j;
	                }
	            }
	            else{
	                ++i;
	                ++j;
	            }
	        }
	        if(gap == 1)
	            break;
	        else if(gap == 2)
	            gap = 1;
	        else gap = (gap + 1) / 2;
	    }
	}
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, m, i;
        cin >> n >> m;
        int arr1[n], arr2[m];
        for (i = 0; i < n; i++) {
            cin >> arr1[i];
        }
        for (i = 0; i < m; i++) {
            cin >> arr2[i];
        }
        Solution ob;
        ob.merge(arr1, arr2, n, m);
        for (i = 0; i < n; i++) {
            cout << arr1[i] << " ";
        }
        for (i = 0; i < m; i++) {
            cout << arr2[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}  // } Driver Code Ends
