class Solution {
public:
    int minDistance(string &s1, string &s2) {
        int n1 = s1.length(), n2 = s2.length();
        vector<vector<int>> dp(n1 + 1, vector<int> (n2 + 1));
        
        
        for(int i=0;i<=n1;i++){
            for(int j=0;j<=n2;j++){
                if(i == 0){
                    dp[i][j] = j;
                }
                else if(j == 0){
                    dp[i][j] = i;
                }
                else{
                    if(s1[i-1] == s2[j-1]){
                        dp[i][j] = dp[i-1][j-1];
                    }
                    else{
                        int mn = dp[i-1][j];
                        mn = min(mn,min(dp[i][j-1], dp[i-1][j-1]));
                        dp[i][j] = mn+1;
                    }
                }
                // cout<<dp[i][j]<<" ";
            }
            // cout<<endl;
        }
        return dp[n1][n2];
        
    }
};
