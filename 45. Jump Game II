class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n);
        
        dp[n-1] = 0;
        for(int i=n-2;i>=0;i--){
            int currJump = nums[i];
            int ans = INT_MAX;
            for(int j = 1;j<=currJump;j++){
                
                int nextJump = j + i;
                if(nextJump < n){
                    if(dp[nextJump] == -1){
                        continue;
                    }
                    ans = min(ans, dp[nextJump] + 1);
                }
            }
            if(ans == INT_MAX){
                dp[i] = -1;
            }
            else
                dp[i] = ans;
        }
        for(int i=0;i<n;i++)
            cout<<dp[i]<<" ";
        if(dp[0] == INT_MAX)
            return -1;
        return dp[0];
    }
};
