/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
public:
    int x;
    TreeNode* t;
    void solve(TreeNode* root,int x){
        if(root != nullptr)
            root->val = x;
        if(root->left != nullptr)
            solve(root->left,(x*2)+1);
        if(root->right != nullptr)
            solve(root->right,(x*2)+2);
    }
    FindElements(TreeNode* root) {
        x = 0;
        solve(root,x);
        t = root;
    }
    bool help(TreeNode* root,int x){
        if(root == nullptr)
            return false;
        if(root->val ==x)
            return true;
        if(help(root->left,x))
            return true;
        if(help(root->right,x))
            return true;
        return false;
    }
    bool find(int target) {
        return help(t,target);
    }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */
