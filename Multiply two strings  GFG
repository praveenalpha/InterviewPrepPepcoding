// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
 

 // } Driver Code Ends

class Solution{
  public:
    /*You are required to complete below function */
    string multiplyStrings(string s1, string s2) {
      if(s1[0] == '-' && s2[0] == '-'){
            s1.erase(0, 1);
            s2.erase(0, 1);
            int n1 = s1.length(), n2 = s2.length();
            vector<int> ans(n1+n2, 0);
            for(int i=n2-1;i >=0 ;i--){
              for(int j=n1-1;j>=0;j--){
                  int idx1 = i+j, idx2 = i+j+1;
                  int val = ( ( s2[i] - '0') * ( s1[j] - '0' ) ) + ans[idx2];
                  int rem = val % 10;
                  int quo = val / 10;
                  ans[idx2] = rem;
                  ans[idx1] += quo;
              }
            }
            string str = "";
          int i=0;
          while(i < ans.size() && ans[i] == 0){
              i++;
          }
          while(i < ans.size()){
              str += to_string(ans[i]);
              i++;
          }
          if(str.length() == 0){
              return "0";
          }
          return str;
      }
      else if(s1[0] == '-'){
          s1.erase(0, 1);
            int n1 = s1.length(), n2 = s2.length();
            vector<int> ans(n1+n2, 0);
            for(int i=n2-1;i >=0 ;i--){
              for(int j=n1-1;j>=0;j--){
                  int idx1 = i+j, idx2 = i+j+1;
                  int val = ( ( s2[i] - '0') * ( s1[j] - '0' ) ) + ans[idx2];
                  int rem = val % 10;
                  int quo = val / 10;
                  ans[idx2] = rem;
                  ans[idx1] += quo;
              }
            }
            string str = "";
          int i=0;
          while(i < ans.size() && ans[i] == 0){
              i++;
          }
          while(i < ans.size()){
              str += to_string(ans[i]);
              i++;
          }
          if(str.length() == 0){
              return "0";
          }
          str.insert(0, "-");
          return str;
      }
      else if(s2[0] == '-'){
            s2.erase(0, 1);
            int n1 = s1.length(), n2 = s2.length();
            vector<int> ans(n1+n2, 0);
            for(int i=n2-1;i >=0 ;i--){
              for(int j=n1-1;j>=0;j--){
                  int idx1 = i+j, idx2 = i+j+1;
                  int val = ( ( s2[i] - '0') * ( s1[j] - '0' ) ) + ans[idx2];
                  int rem = val % 10;
                  int quo = val / 10;
                  ans[idx2] = rem;
                  ans[idx1] += quo;
              }
            }
            string str = "";
          int i=0;
          while(i < ans.size() && ans[i] == 0){
              i++;
          }
          while(i < ans.size()){
              str += to_string(ans[i]);
              i++;
          }
          if(str.length() == 0){
              return "0";
          }
          str.insert(0, "-");
          return str;
      }
       
        int n1 = s1.length(), n2 = s2.length();
        vector<int> ans(n1+n2, 0);
        for(int i=n2-1;i >=0 ;i--){
           for(int j=n1-1;j>=0;j--){
               int idx1 = i+j, idx2 = i+j+1;
               int val = ( ( s2[i] - '0') * ( s1[j] - '0' ) ) + ans[idx2];
               int rem = val % 10;
               int quo = val / 10;
               ans[idx2] = rem;
               ans[idx1] += quo;
           }
        }
        string str = "";
       int i=0;
       while(i < ans.size() && ans[i] == 0){
           i++;
       }
       while(i < ans.size()){
           str += to_string(ans[i]);
           i++;
       }
       if(str.length() == 0){
           return "0";
       }
       return str;
    }

};

// { Driver Code Starts.
 
int main() {
     
    int t;
    cin>>t;
    while(t--)
    {
    	string a;
    	string b;
    	cin>>a>>b;
    	Solution obj;
    	cout<<obj.multiplyStrings(a,b)<<endl;
    }
     
}  // } Driver Code Ends
