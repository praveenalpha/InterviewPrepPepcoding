// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
public:
	int isNegativeWeightCycle(int n, vector<vector<int>>edges){
	    int number_of_edges = edges.size();
	    vector<int> dp(n, INT_MAX);
	    dp[0] = 0;
	    for(int j=0;j<n-1;j++){
	        for(int i=0;i<number_of_edges;i++){
	            int u = edges[i][0], v = edges[i][1], wt = edges[i][2];
	            if(dp[u] == INT_MAX)    continue;
	            if(dp[u] + wt < dp[v])  dp[v] = dp[u] + wt;
	        }
	    }
	    for(int i=0;i<number_of_edges;i++){
	        int u = edges[i][0], v = edges[i][1], wt = edges[i][2];
	        if(dp[u] + wt < dp[v])  return 1;
	    }
	    return 0;
	}
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>edges;
		for(int i = 0; i < m; i++){
			int x, y, z;
			cin >> x >> y >> z;
			edges.push_back({x,y,z});
		}
		Solution obj;
		int ans = obj.isNegativeWeightCycle(n, edges);
		cout << ans <<"\n";
	}
	return 0;
}  // } Driver Code Ends
