/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(d == 1){
            TreeNode* l = root;
            root = new TreeNode(v);
            root->left = l;
            return root;
        }
        queue<TreeNode*> q;
        q.push(root);
        int lev = 1;
        bool flag = false;
        while(q.size() != 0){
            int size = q.size();
            while(size--){
                TreeNode* rnode = q.front();
                q.pop();
                if(d==lev+1){
                    TreeNode* l = rnode->left;
                    TreeNode* r = rnode->right;
                    rnode->left = new TreeNode(v);
                    rnode->right = new TreeNode(v);
                    rnode->left->left = l;
                    rnode->right->right = r;
                    flag = true;
                }
                else{
                    if(rnode->left != nullptr)
                        q.push(rnode->left);
                    if(rnode->right != nullptr)
                        q.push(rnode->right);
                }
            }
            if(flag)
                return root;
            lev+=1;
        }
        return root;
    }
};
