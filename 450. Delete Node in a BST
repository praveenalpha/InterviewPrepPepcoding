/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* &root, int key) {
        if(root == nullptr)
            return nullptr;
        if(root->val < key)
            deleteNode(root->right, key);
        else if(root->val > key)
            deleteNode(root->left, key);
        else root = removeNode(root);
        return root;
    }
    TreeNode* removeNode(TreeNode* &root){
        if(root->left == nullptr && root->right == nullptr)
            return nullptr;
        else if(root->left == nullptr)
            return root->right;
        else if(root->right == nullptr)
            return root->left;
        else{
            TreeNode* lc = root->left;
            TreeNode* rc = root->right;
            while(lc->right != nullptr){
                lc = lc->right;
            }
            lc->right = rc;
            return root->left;
        }
        return nullptr;
    }
    
};
