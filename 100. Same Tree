/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(q==nullptr && p == nullptr)
            return true;
        if(q!=nullptr && p == nullptr)
            return false;
        if(q==nullptr && p != nullptr)
            return false;
        
        if(p->val != q->val)
            return false;
        bool ans = true;
        
        if(q->left != nullptr && p->left != nullptr)
            ans = isSameTree(p->left, q->left);
        
        else if(q->left == nullptr && p->left != nullptr)
            return false;
        else if(p->left == nullptr && q->left != nullptr)
            return false;
        
        if(ans == false)
            return false;
        
        if(q->right != nullptr && p->right != nullptr)
            ans = isSameTree(p->right, q->right);
        
        else if(q->right == nullptr && p->right != nullptr)
            return false;
        else if(p->right == nullptr && q->right != nullptr)
            return false;
        
        
        if(ans == false)
            return false;
        return ans;
        
    }
};
