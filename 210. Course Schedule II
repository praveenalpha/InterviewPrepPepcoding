class Solution {
public:
    
    
    vector<int> findOrder(int V, vector<vector<int>>& pre) {
        vector<vector<int>> graph(V, vector<int> ());
        vector<int> inDegree(V);
        for(vector<int> edge: pre){
            int u = edge[0], v = edge[1];
            inDegree[u]++;
            graph[v].push_back(u);
        }
        
        vector<int> ans;
        
        
        queue<int> q;
        for(int i=0;i<V;i++){
            if(inDegree[i] == 0)
                q.push(i);
        }
        int count = 0;
        while(q.size()){
            int rnode = q.front();
            q.pop();
            ans.push_back(rnode);
            count++;
            
            for(int child: graph[rnode]){
                inDegree[child]--;
                if(inDegree[child] == 0){
                    q.push(child);
                }
            }
        }
        
        if(count == V)
            return ans;
        ans = {};
        return ans;
    }
};
