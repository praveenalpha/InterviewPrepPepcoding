/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* get_tail(TreeNode* root){
        while(root->right != nullptr)   root = root->right;
        return root;
    }
    void flatten(TreeNode* root) {
        if(root == nullptr) return;
        TreeNode* tail = root;
        if(root->left != nullptr){
            flatten(root->left);
            tail = get_tail(root->left);
        }
        if(root->right != nullptr){
            flatten(root->right);
        }
        if(tail == root)    return;
        tail->right = root->right;
        root->right = root->left;
        root->left = nullptr;
    }
};
