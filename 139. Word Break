class Solution {
public:
    bool wordBreak(string &s, vector<string>& wordDict) {
        unordered_set<string> st;
        for(string str : wordDict){
            st.insert(str);
        }
        int n = s.length();
        vector<bool> dp(n);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<=i;j++){
                string str = s.substr(j, i-j+1);
                if(st.find(str) != st.end()){
                    if(j == 0)
                        dp[i] = true;
                    else if(j > 0 && dp[j-1])
                        dp[i] = true;
                        
                }
            }
            // cout<<dp[i]<<" ";
        }
        return dp[n-1];
    }
};
