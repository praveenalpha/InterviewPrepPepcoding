class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int m = matrix.size();
        if(m == 0)
            return ans;
        int n = matrix[0].size();
        if(n == 0)
            return ans;
        bool dir = true;
        int row = 0 , col = 0;
        while(row < m && col < n){
            if(dir)
                while(row >= 0 && col <= n-1)
                    ans.push_back(matrix[row--][col++]);
            
            else
                while(row <= m-1 && col >= 0)
                    ans.push_back(matrix[row++][col--]);
            cout<<row<<","<<col<<" ";
            if(row <= 0 || col >= n){
                if(col < n)
                    row = 0;
                    
                else{
                    col = n - 1;
                    row += 2;
                }
            }
            else if(col <= 0 || row >= m){
                if(row < m)
                    col = 0;
                else{
                    col += 2;
                    row = m - 1;
                }
            }
            dir = !dir;
        }
        return ans;
    }
};
