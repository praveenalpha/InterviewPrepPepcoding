// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
public:
	bool isBipartite(int V, vector<int>adj[]){
	   // 0 -> unvisited
	   // 1 -> group A
	   // 2 -> group B
	    vector<int> vis(V, 0);
	   for(int i=0;i<V;i++){
	       if(vis[i] != 0)
	        continue;
	        
	       queue<int> q;
	       q.push(i);
	       vis[i] = 1;
	       while(q.size()){
	           int rval = q.front();
	           q.pop();
	           
	           for(int e : adj[rval]){
	               if(vis[rval] == 1){
	                   if(vis[e] == 1)
	                    return false;
	                   
	                   if(vis[e] == 0)
    	                   q.push(e);
	                   vis[e] = 2;
	               }
	               else{
	                   if(vis[e] == 2)
	                    return false;
	                    
	                    if(vis[e] == 0)
    	                   q.push(e);
	                   vis[e] = 1;
	               }
	               
	           }
	       }
	   }
	    return true;
	}

};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		bool ans = obj.isBipartite(V, adj);    
		if(ans)cout << "1\n";
		else cout << "0\n";  
	}
	return 0;
}  // } Driver Code Ends
