// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int solve(vector<vector<int>>& arr, int i, int j, int n, vector<vector<int>>& dp){
        if(i == n || j == n || j < 0)    return 0;
        if(i == n-1)    return dp[i][j] = arr[i][j];
        if(dp[i][j] != -1)   return dp[i][j];
        int r_ans = solve(arr, i+1, j+1, n, dp);
        int d_ans = solve(arr, i+1, j, n, dp);
        int dia_ans = solve(arr, i+1, j-1, n, dp);
        return dp[i][j] = max({r_ans, d_ans, dia_ans}) + arr[i][j];
    }
    int maximumPath(int n, vector<vector<int>>& arr)
    {
        int ans = 0;
        vector<vector<int>> dp(n, vector<int> (n, -1));
        for(int i=0;i<n;i++)
            ans = max(ans, solve(arr, 0, i, n, dp));
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        vector<vector<int>> Matrix(N, vector<int>(N, 0));
        for(int i = 0;i < N*N;i++)
            cin>>Matrix[(i/N)][i%N];
        
        Solution ob;
        cout<<ob.maximumPath(N, Matrix)<<"\n";
    }
    return 0;
}  // } Driver Code Ends
