class Solution {
public:
    int kadanes(vector<int>& arr){
        long int Max = arr[0], curr = 0 , n = arr.size(),mod = 1000000007;
        for(int i=0;i<2*n;i++){
            curr = ((curr%mod) + (arr[i%n]%mod)%mod);
            Max = max(Max , curr);
            if(curr < 0)
                curr = 0;
        }
        return (int)Max;
    }
    int kConcatenationMaxSum(vector<int>& arr, int k) {
        long int sumOfEntireArray = 0,mod = 1000000007;
        for(int ele:arr)
            sumOfEntireArray += ele;
        if(sumOfEntireArray >= 0){
            return (int)(((sumOfEntireArray%mod)*((k-2)%mod))%mod) + kadanes(arr);
        }
        else{
            int ans = kadanes(arr);
            if(ans < 0)
                return 0;
            else return ans;
        }
        return 0;
    }
};
