class Solution {
public:
    bool is_possible(vector<int>& arr, int mid, int x){
        int n = arr.size(), sum = 0;
        for(int e : arr){
            int q = ceil((double)e/(double)mid);
            sum += q;
        }
        return sum <= x;
    }
    void bs(vector<int>& arr, int l, int r, int &ans, int x){
        while(l<=r){
            int mid = l+(r-l)/2;
            if(is_possible(arr, mid, x)){
                ans = mid;
                r = mid-1;
            }
            else
                l = mid+1;
        }
    }
    int smallestDivisor(vector<int>& arr, int x) {
        int n = arr.size();
        int l = 1, r = arr[0];
        for(int e:arr)  r = max(r, e);
        int ans = r;
        bs(arr, l, r, ans, x);
        return ans;
    }
};
