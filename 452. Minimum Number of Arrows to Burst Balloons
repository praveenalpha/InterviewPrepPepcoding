class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        int n = points.size();
        sort(points.begin(), points.end());
        vector<vector<int>> ans;
        int i=1;
        ans.push_back(points[0]);
        while(i < n){
            int s1 = ans[ans.size() - 1][0], e1 = ans[ans.size()-1][1], s2 = points[i][0], e2 = points[i][1];
            if(s1 <= e2 && s2 <= e1){
                ans[ans.size() - 1][0] = min(s1, s2);
                ans[ans.size() - 1][1] = min(e1, e2);
            }
            else if(s2 <= e1 && s1 <= e2){
                ans[ans.size() - 1][0] = min(s1, s2);
                ans[ans.size() - 1][1] = min(e1, e2);
            }
            else{
                ans.push_back(points[i]);
            }
            i++;
        }
        for(int i=0;i<ans.size();i++)
            cout<<"("<<ans[i][0]<<","<<ans[i][1]<<")";
        return ans.size();
    }
};
