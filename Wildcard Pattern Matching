// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
  public:
/*You are required to complete this method*/
    int wildCard(string &p,string &s)
    {
        int n1 = p.length(), n2 = s.length();
        vector<vector<int>> dp(n1+1, vector<int> (n2+1));
        
        for(int i=n1;i>=0;i--){
            for(int j=n2;j>=0;j--){
                if(i == n1 && j == n2){
                    dp[i][j] = 1;
                }
                else if(i == n1){
                    dp[i][j]=0;
                }
                else if(j == n2){
                    if(p[i] == '*')
                        dp[i][j] = dp[i+1][j];
                    else
                        dp[i][j] = 0;
                }
                else{
                    if(p[i] == s[j]){
                        dp[i][j] = dp[i+1][j+1];
                    }
                    else if(p[i] == '?'){
                        dp[i][j] = dp[i+1][j+1];
                    }
                    else if(p[i] == '*'){
                        dp[i][j] = dp[i+1][j] || dp[i][j+1];
                    }
                    else{
                        dp[i][j] = 0;
                    }
                }
            }
        }
        return dp[0][0];
    }
};

// { Driver Code Starts.
int main()
{
   int t;
   cin>>t;
   while(t--)
   {
           string pat,text;
           cin>>pat;
cin.ignore(numeric_limits<streamsize>::max(),'\n');
           cin>>text;
           Solution obj;
           cout<<obj.wildCard(pat,text)<<endl;
   }
}
  // } Driver Code Ends
