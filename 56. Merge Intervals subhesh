bool comparator(vector<int> a, vector<int> b){
    return a[0] < b[0];
}
class Solution {
public:
    bool isOverlap(vector<int>& interval, vector<int>& temp){
        if(temp[1] >= interval[0])
            return true;
        return false;
    }
    vector<int> mergeIntervals(vector<int>& interval, vector<int>& temp){
        vector<int> ans = {temp[0], max(temp[1], interval[1])};
        return ans;
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> ans;
        sort(intervals.begin(), intervals.end(), comparator);
        vector<int> temp = intervals[0];
        int i=1, n = intervals.size();
        while(i < n){
            if(isOverlap(intervals[i], temp) ){
                temp = mergeIntervals(intervals[i], temp);
            }
            else{
                ans.push_back(temp);    
                temp = intervals[i];
            }
            i++;
            
        }
        ans.push_back(temp);
        return ans;
    }
};
