class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n = nums.size();
        vector<bool> dp(n);
        
        dp[n-1] = true;
        for(int i=n-2;i>=0;i--){
            int jump = nums[i];
            
            for(int j = 1;j <= jump;j++){
                if(j + i < n){
                    if(dp[j+i]==true){
                        dp[i] = true;
                        break;
                    }
                }
            }
        }
        for(int i=0;i<n;i++)
            cout<<dp[i]<<" ";
        return dp[0];
    }
};
