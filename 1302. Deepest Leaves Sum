/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        if(root == nullptr)
            return 0;
        queue<TreeNode*> q;
        q.push(root);
        int ans=0;
        int temp;
        while(q.size()!=0){
            int size = q.size();
            temp=0;
            while(size--){
                TreeNode* r = q.front();
                q.pop();
                temp+=r->val;
                if(r->left != nullptr)
                    q.push(r->left);
                if(r->right != nullptr)
                    q.push(r->right);
            }
            ans=temp;
        }
        return ans;
    }
};
