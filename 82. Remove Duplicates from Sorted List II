/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* temp = head;
        ListNode* prev = nullptr;
        while(temp != nullptr){
            if(temp->next != nullptr && temp->val == temp->next->val) {
                int cmp = temp->val;
                while(temp!=nullptr && temp->val == cmp){
                    temp = temp->next;
                }
                if(prev == nullptr){
                    head = temp;
                }
                else
                    prev -> next = temp;
            }
            else{
                prev = temp;
                temp = temp->next;
            }
            
        }
        return head;
    }
};
