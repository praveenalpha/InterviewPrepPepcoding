/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* th = nullptr;
    ListNode* tt = nullptr;
    ListNode* reverseList(ListNode* head) {
        if(head == nullptr || head->next == nullptr)    return head;
        ListNode* curr = head;
        while(curr != nullptr){                
            ListNode* next_node = curr->next;

            if(tt == nullptr){
                curr->next = nullptr;
                tt = curr;
                th = curr;
            }
            else{
                curr->next = th;
                th = curr;
            }
            curr = next_node;
        }
        return th;
    }
};
