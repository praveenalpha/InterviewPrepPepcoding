// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

int maxLen(int arr[], int n);

int main()
{
    // your code goes here
    int T;
    cin >> T;
    while (T--)
    {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        cout << maxLen(a, n) << endl;
    }
    return 0;
}// } Driver Code Ends


/*You are required to complete this method*/

// arr[] : the input array containing 0s and 1s
// N : size of the input array

// return the maximum length of the subarray
// with equal 0s and 1s
int maxLen(int arr[], int N)
{
    int zero_count = 0; 
    int one_count = 0; 
    int ans = 0;
    int res = 0;
    unordered_map<int,int> mp;
    mp[0] = -1;
    for(int i=0;i<N;++i){
        if(arr[i] == 1){
            ++ans;
            if(mp.find(ans) == mp.end()){
                mp[ans] = i;
            }
            else{
                res = max(res, i - mp[ans]);
            }
            
        }
        else{
            --ans;
            if(mp.find(ans) == mp.end()){
                mp[ans] = i;
            }
            else{
                res = max(res, i - mp[ans] );
            }
            
        }
    }
    return res;
    // Your code here
}
