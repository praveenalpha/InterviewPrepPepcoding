/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int i;
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        i=0;
        long long int mn = INT_MIN, mx = INT_MAX;
        return construct(preorder, mn, mx);
    }
    TreeNode* construct(vector<int>& pre, long long int mn, long long int mx){
        if(i == pre.size())
            return nullptr;
        if(mn <= pre[i]  && pre[i] <= mx){
            TreeNode* root = new TreeNode();
            root->val = pre[i];
            i++;
            root->left = construct(pre, mn, root->val-1);
            root->right = construct(pre, root->val+1, mx);
            return root;
        }
        return nullptr;
    }
};
