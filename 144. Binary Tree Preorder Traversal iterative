/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root == nullptr) return ans;
        stack<pair<TreeNode*, int>> st;
        st.push({root, 1});
        while(!st.empty()){
            pair<TreeNode*, int> rnode = st.top();
            st.pop();
            if(rnode.second == 1){
                ans.push_back(rnode.first->val);
                st.push({rnode.first, 2});
                if(rnode.first->left != nullptr)    st.push({rnode.first->left, 1});
            }
            else if(rnode.second == 2){
                st.push({rnode.first, 3});
                if(rnode.first->right != nullptr)   st.push({rnode.first->right, 1});
            }
        }
        return ans;
    }
};
