/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */

class Solution {
public:
    /**
     * @param root: the root of binary tree
     * @return: the length of the longest consecutive sequence path
     */
     int ans;
    void solve(TreeNode* root,int sol){
        if(root == nullptr)
            return;
        if(root->left != nullptr && root->left->val == root->val+1){
            solve(root->left,sol+1);
            ans = max(ans,sol+1);
        }
        else
            solve(root->left,0);
        if(root->right != nullptr && root->right->val == root->val+1){
            solve(root->right,sol+1);
            ans = max(ans,sol+1);
        }
        else
            solve(root->right,0);
        
    }
    int longestConsecutive(TreeNode * root) {
        // write your code here
        ans = 0;
        solve(root,0);
        return ans==0?1:ans+1;
    }
};
