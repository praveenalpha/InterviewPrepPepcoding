/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1 == nullptr)   return l2;
        if(l2 == nullptr)   return l1;
        
        ListNode* h1 = l1;
        ListNode* h2 = l2;
        ListNode* ans = new ListNode(-1);
        ListNode* curr = ans;
        while(h1 != nullptr && h2 != nullptr){
            if(h1->val <= h2->val){
                ListNode* new_node = new ListNode(h1->val);
                curr->next = new_node;
                curr = curr->next;
                h1 = h1->next;
            }
            else{
                ListNode* new_node = new ListNode(h2->val);
                curr->next = new_node;
                curr = curr->next;
                h2 = h2->next;
            }
        }
        if(h1 == nullptr)   curr->next = h2;
        if(h2 == nullptr)   curr->next = h1;
        return ans->next;
    }
};
