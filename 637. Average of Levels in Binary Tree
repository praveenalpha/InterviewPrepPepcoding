/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> ans;
        if(root == nullptr)
            return ans;
        queue<TreeNode*> q;
        q.push(root);
        while(q.size() != 0){
            int size = q.size();
            double sum = 0;
            double n = size;
            while(size--){
                TreeNode* rnode = q.front();
                q.pop();
                sum += rnode->val;
                if(rnode -> left != nullptr)
                    q.push(rnode->left);
                if(rnode -> right != nullptr)
                    q.push(rnode->right);
            }
            double avg = sum/n;
            ans.push_back(avg);
        }
        return ans;
    }
};
