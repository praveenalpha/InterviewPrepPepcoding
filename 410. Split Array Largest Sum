class Solution {
public:
    bool is_possible(vector<int>& arr, int mid, int m){
        int count = 1, sum = 0;
        for(int e:arr){
            sum += e;
            if(sum > mid){
                count++;
                sum = e;
            }
        }
        return count<=m?true:false;
    }
    void bs(vector<int>& arr, int l, int r, int &ans, int m){
        while(l <= r){
            int mid = l + (r-l)/2;
            if(is_possible(arr, mid, m) == true){
                ans = mid;
                r = mid-1;
            }
            else
                l = mid+1;
        }
    }
    int splitArray(vector<int>& nums, int m) {
        int l = 0, r = 0;
        for(int e : nums){
            l = max(l,e);
            r += e;
        }
        int ans = r;
        bs(nums, l, r, ans,m);
        return ans;
    }
};
