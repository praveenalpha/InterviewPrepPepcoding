/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int, int> solve(TreeNode* root, int& ans){
        if(root == nullptr) return {-1, -1};
        pair<int, int> left_ans = solve(root->left, ans);
        pair<int, int> right_ans = solve(root->right, ans);
        ans = max(ans, max(left_ans.second+1, max(right_ans.first+1, max(right_ans.second, left_ans.first))));        
        return {left_ans.second+1, right_ans.first+1};
    }
    int longestZigZag(TreeNode* root) {
        int ans = -1;
        solve(root, ans);
        return ans;
    }
};
