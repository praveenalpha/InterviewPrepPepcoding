/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        int ans = INT_MAX;
        TreeNode* prev = nullptr;
        inorder(root , ans, prev);
        return ans;
    }
    void inorder(TreeNode* root, int &ans, TreeNode* &prev){
        if(root->left != nullptr)
            inorder(root->left, ans, prev);
        
        if(prev != nullptr){
            ans = min(ans, root->val - prev->val);
        }
        prev = root;
        
        if(root->right != nullptr){
            inorder(root->right,ans, prev );
        }
    }
};
