/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans;
    bool check(vector<int>& map){
        int count=0;
        for(int i=1;i<10;i++){
            if(map[i]%2==0)
                continue;
            else if(map[i]%2!=0)
                count++;
            if(count > 1)
                return false;
        }
        return true;
    }
    void solve(TreeNode* root, vector<int>& map){
        if(root == nullptr)
            return;
        if(root->left == nullptr && root->right == nullptr){
            map[root->val]++;
            if(check(map))
                ans++;
            map[root->val]--;
            return;
        }
        map[root->val]++;
        solve(root->left,map);
        solve(root->right,map);
        map[root->val]--;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        ans = 0;
        vector<int> map(10,0);
        solve(root,map);
        return ans;
    }
};
