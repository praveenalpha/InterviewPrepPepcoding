/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        TreeNode* prev = nullptr;
        return inorder(root, prev);
        
    }
    bool inorder(TreeNode* root, TreeNode* &prev){
        bool ans = true;
        
        if(root->left != nullptr)
            ans = inorder(root->left, prev);
        
        if(ans == false)
            return false;
        
        if(prev != nullptr && prev->val >= root->val){
            ans = false;
            return ans;
            
        }
        
        if(ans == false)
            return false;
        
        prev = root;
        
        if(root->right != nullptr)
            ans = inorder(root->right, prev);
        
        if(ans == false)
            return false;
        
        return true;
    }
};
