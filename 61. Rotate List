/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int ans = 0;
        ListNode* temp = head;
        while(temp != nullptr){
            ans++;
            temp = temp->next;
        }
        return ans;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == nullptr || head->next == nullptr)    return head;
        if(k == 0)  return head;
        int len = length(head);
        if(k%len == 0)  return head;
        k%=len;
        k = len-k;
        ListNode* prev = nullptr;
        ListNode* curr = head;
        while(k--){
            prev = curr;
            curr = curr->next;
        }
        prev->next = nullptr;
        ListNode* temp = curr;
        while(temp->next != nullptr){
            temp = temp->next;
        }
        temp->next = head;
        return curr;
    }
};
