/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root, bool &ans){
        if(root->left == nullptr && root->right == nullptr) return 1;
        if(ans == false)    return 0;
        int left = 0;
        if(root->left != nullptr)   left = height(root->left, ans);
        if(ans == false)    return false;
        int right = 0;
        if(root->right != nullptr)  right = height(root->right, ans);
        if(abs(left - right) > 1)   ans = false;
        if(ans == false)    return false;
        return max(left, right)+1;
    }
    bool isBalanced(TreeNode* root) {
        if(root == nullptr) return true;
        bool ans = true;
        height(root, ans);
        return ans;
    }
};
