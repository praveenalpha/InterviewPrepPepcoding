class Solution {
public:
    int LCS(string& s1, string& s2, int n1, int n2){
        vector<vector<int>> dp(n1+1, vector<int> (n2+1, -1));
        for(int i=0;i<=n1;i++){
            for(int j=0;j<=n2;j++){
                if(i == 0 || j == 0)    dp[i][j] = 0;
                else if(s1[i-1] == s2[j-1]) dp[i][j] = dp[i-1][j-1] + 1;
                else    dp[i][j] = max(dp[i][j-1] , dp[i-1][j]);
            }
        }
        return dp[n1][n2];
    }
    int minDistance(string& s1, string& s2) {
        int n1 = s1.length(), n2 = s2.length();
        int lcs = LCS(s1, s2, n1, n2);
        return (n1 - lcs) + (n2 - lcs);
    }
};
