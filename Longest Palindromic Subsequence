// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function Template for C++

class Solution{
  public:
    int solve(string& s, int l, int r, vector<vector<int>>& dp){
        if(l > r)   return 0;
        if(dp[l][r] != -1)  return dp[l][r];
        if(l == r)  return dp[l][r] = 1;
        if(s[l] == s[r])    return dp[l][r] = 2 + solve(s, l+1, r-1, dp);
        return dp[l][r] = max(solve(s, l+1, r, dp), solve(s, l, r-1, dp));
    }
    int longestPalinSubseq(string& s) {
        int n = s.length();
        vector<vector<int>> dp(n+1, vector<int> (n+1, -1));
        return solve(s, 0, n-1, dp);
    }
};

// { Driver Code Starts.

int32_t main()
{
    int t; cin >> t;
    while (t--)
    {
        string s; cin >> s;
        Solution ob;
        cout << ob.longestPalinSubseq(s) << endl;
    }
}
// Contributed By: Pranay Bansal
  // } Driver Code Ends
